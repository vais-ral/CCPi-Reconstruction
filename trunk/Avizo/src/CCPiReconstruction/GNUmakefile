#
# DO NOT EDIT
#
# This makefile was automatically generated by createBuildSystem.scro.
#
# Edit the file 'Package' located in the same directory to change settings.
#

ifdef PARALLELFLAGS
    $(warning PARALLELFLAGS is no longer supported.  Use 'make -j N' instead.)
endif

# Define V if you want verbose output, e.g. run 'V=1 make'.
ifdef V
    TAR_VERBOSE=v
else
    QUIET=@
endif

.DELETE_ON_ERROR:

.PHONY: gotoTarget checkArch clean dep depclean copy bin lib FORCE

# Canceling implicit rules
%.o : %.c
%.o : %.cpp
%.o : %.cc
%.o : %.C
%.o : %.p
%.o : %.r
%.o : %.f
%.o : %.F
%.sym : %.def
%.o : %.mod
%.o : %.s
%.s : %.S
% : %.o
%.c : %.y
%.c : %.l
%.r : %.l
%.nl : %c
%.dvi : %.tex
%.tex : %.web
%.tex : %.w
%.p : %.web
%.c : %.w
%.dvi : %.texinfo
%.dvi : %.texi
%.dvi : %.txinfo
%.info : %.texinfo
%.info : %.texi
%.info : %.txinfo

# The default target.
default all: copy dep lib

# The name of this package.
PACKAGE = CCPiReconstruction
TARGET = CCPiReconstruction

# The main directories.
BUILDROOT = ../..
PRODUCTROOT = ../../.
INTERMEDIATEROOT = ../../obj
MAINROOT = /usr/local/Avizo/9.0.0
DEVTOOLSDIR = /usr/local/Avizo/9.0.0/share/devtools
NVCCPATH = /usr/local/Avizo/9.0.0
HXCUDAUTILSPATH = /usr/local/Avizo/9.0.0/include/hxcudautils

# Git version information.
TAGLIB_VERSION_ARGS = -tagdel version_tag -tagdel version_patch -tagdel product -tagdel version_minor -tagdel version_major -tagdel vendor

# Some helper commands.
COPY_CMD = cp
BISON = bison
FLEX = flex
RANLIB = ranlib
MOC = $(MAINROOT)/bin/arch-$(MAKE_UNAME)-$(MAKE_CFG)/moc
UIC = $(MAINROOT)/bin/arch-$(MAKE_UNAME)-$(MAKE_CFG)/uic
RCC = $(MAINROOT)/bin/arch-$(MAKE_UNAME)-$(MAKE_CFG)/rcc
TAGLIB = $(MAINROOT)/bin/taglib
CYTHON = $(MAINROOT)/bin/python $(MAINROOT)/bin/cython

DIRNAME=$(shell basename "$(CURDIR)")

NVCC = $(NVCCPATH)/bin/arch-$(MAKE_UNAME)/cuda/bin/nvcc

# The configuration and architecture.
MAKE_CFG ?= Debug

uname_s := $(shell sh -c 'uname -s 2>/dev/null || echo unknown')
uname_m := $(shell sh -c 'uname -m 2>/dev/null || echo unknown')

ifeq ($(uname_s),Linux)
    ifeq ($(uname_m),x86_64)
        MAKE_UNAME = LinuxAMD64
    else
        ifeq ($(uname_m),i686)
            MAKE_UNAME = Linux
        else
            $(error Unknown Linux machine type '$(uname_m)'.)
        endif
    endif
else
    ifeq ($(uname_s),Darwin)
        MAKE_UNAME = MacX
    else
        $(error Unknown operating system '$(uname_s)'.)
    endif
endif

ARCH=arch-$(MAKE_UNAME)-$(MAKE_CFG)


# The architecture specific setup.
ifeq ($(MAKE_UNAME),LinuxAMD64)
    HX_COMPILER_gcc44 = 1
    CC = gcc
    CXX = g++

    LD = $(CXX)
    MAKEDEP = $(CXX) $(INCLUDES) $(DEFINES) -MM -MF $@ -MT $(basename $@).o $<

    HX_OPENMP_FLAG = $(shell $(CXX) --help -v 2>&1 | grep -q fopenmp && echo "-fopenmp")

    LD_HASHSTYLE_FLAG = $(shell ld --hash-style=sysv 2>&1 | grep -i -q "unrecognized option" || echo "-Wl,--hash-style=sysv")
    LD_SHARED = -shared -Wl,--export-dynamic $(LD_HASHSTYLE_FLAG)
    # Tell shared libs to search for other shared libs in the same directory and in lib/.
    LD_SHARED += -Wl,-rpath,\$$ORIGIN:\$$ORIGIN/..
    SHARED_EXT = so
    LD_SYMBOLIC = -Wl,-Bsymbolic
    LDFLAGS += $(LD_HASHSTYLE_FLAG) -L/usr/X11R6/lib64 $(HX_OPENMP_FLAG)  -Wl,--unresolved-symbols=ignore-in-shared-libs

    HXRPATH = -Wl,-rpath-link,$(LIBDIR)
    # Tell binaries to search for shared libs in lib/arch-.../ and lib/.
    HXRPATH += -Wl,-rpath,\$$ORIGIN/../../lib/$(ARCH):\$$ORIGIN/../../lib
    LINK_BIN = $(LD) $(HXRPATH) $(LDFLAGS)

    CFLAGS = -shared -fPIC $(HX_OPENMP_FLAG)
    CFLAGS += -Wall -Wno-unknown-pragmas
    CFLAGS += -mmmx -msse -msse2 -mfpmath=sse

    CXXFLAGS = -shared -fPIC $(HX_OPENMP_FLAG)
    CXXFLAGS += -Wall -Wno-unknown-pragmas
    CXXFLAGS += -mmmx -msse -msse2 -mfpmath=sse

    CXXFLAGS += -fmessage-length=0
    CXXFLAGS += -fexceptions
    CXXFLAGS += -frounding-math

    CXXFLAGS += -DHAVE_UNISTD_H

    PYTHON_EXT = so
  ifeq ($(MAKE_CFG),Debug)

    CFLAGS    += -ggdb -D_DEBUG
    CXXFLAGS  += -g -D_DEBUG -DTBB_USE_DEBUG
  endif
  ifeq ($(MAKE_CFG),Optimize)

    CFLAGS    += -O2 -DNDEBUG
    CXXFLAGS  += -O1 -DNDEBUG
  endif
endif

ifeq ($(MAKE_CFG),Debug)
    BISONFLAGS = --debug
    FLEXFLAGS = -d
endif

# The include paths for each configuration.
ifeq ($(MAKE_UNAME),LinuxAMD64)
  ifeq ($(MAKE_CFG),Debug)
    INCLUDES += -I../../../src
    INCLUDES += -I$(MAINROOT)/include/exlibtiff
    INCLUDES += -I../../src
    INCLUDES += -I/usr/X11R6/include
    INCLUDES += -I/usr/local/Avizo/9.0.0/include
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/python2.7
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/oiv
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/ActiveQt
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/Qt3Support
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtCore
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtDBus
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtDesigner
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtGui
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtNetwork
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtOpenGL
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtScript
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtSql
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtSvg
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtTest
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtUiTools
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtXml
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtXmlPatterns
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtDeclarative
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtWebKit
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/cuda
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Algorithms
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Common
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/BasicFilters
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/IO
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Numerics
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Numerics/FEM
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Numerics/NeuralNetworks
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Numerics/Statistics
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/SpatialObject
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Utilities
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Utilities/MetaIO
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Utilities/NrrdIO
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Utilities/expat
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Utilities/itkExtHdrs
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Utilities/vxl/core
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Utilities/vxl/vcl
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Utilities/vxl/v3p/netlib
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Utilities/gdcm
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Utilities/gdcm/src
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt-commercial-charts
  endif
  ifeq ($(MAKE_CFG),Optimize)
    INCLUDES += -I../../../src
    INCLUDES += -I$(MAINROOT)/include/exlibtiff
    INCLUDES += -I../../src
    INCLUDES += -I/usr/X11R6/include
    INCLUDES += -I/usr/local/Avizo/9.0.0/include
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/python2.7
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/oiv
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/ActiveQt
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/Qt3Support
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtCore
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtDBus
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtDesigner
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtGui
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtNetwork
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtOpenGL
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtScript
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtSql
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtSvg
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtTest
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtUiTools
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtXml
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtXmlPatterns
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtDeclarative
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt/QtWebKit
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/cuda
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Algorithms
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Common
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/BasicFilters
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/IO
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Numerics
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Numerics/FEM
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Numerics/NeuralNetworks
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Numerics/Statistics
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/SpatialObject
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Utilities
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Utilities/MetaIO
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Utilities/NrrdIO
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Utilities/expat
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Utilities/itkExtHdrs
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Utilities/vxl/core
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Utilities/vxl/vcl
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Utilities/vxl/v3p/netlib
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Utilities/gdcm
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/itk/Utilities/gdcm/src
    INCLUDES += -I/usr/local/Avizo/9.0.0/include/arch-LinuxAMD64/qt-commercial-charts
  endif
endif

# Link against libs as specified in "--mainconfig Optimize".
LDFLAGS += -L$(MAINROOT)/lib/arch-$(MAKE_UNAME)-Optimize
HXRPATH += -Wl,-rpath-link,$(MAINROOT)/lib/arch-$(MAKE_UNAME)-Optimize
HXRPATH += -Wl,-rpath,\$$ORIGIN/../../lib/arch-$(MAKE_UNAME)-Optimize

# Add the intermediate directory to the include paths.
INCLUDES += -I$(INTERMEDIATEROOT)/$(ARCH)

# Add includes to the C*FLAGS.
CXXFLAGS += $(INCLUDES)
CFLAGS += $(INCLUDES)

# The link command for shared libs.
LINK_SHARED = $(LD) $(LDFLAGS) $(LD_SHARED)

# The package specific paths.
BINDIR = $(PRODUCTROOT)/bin/$(ARCH)
LIBDIR = $(PRODUCTROOT)/lib/$(ARCH)
INTERMEDIATEDIR = $(INTERMEDIATEROOT)/$(ARCH)/$(PACKAGE)

# Dependency handling: Depenencies are only included for default target.
ifeq (,$(MAKECMDGOALS))
-include $(shell [ -d $(INTERMEDIATEDIR) ] && find $(INTERMEDIATEDIR) -name "*.d")
endif

ifeq ($(MAKE_CFG),Debug)
    NVCCFLAGS += -g -G
else
    NVCCFLAGS += -O2
endif

NVCC_GENCODE =  -gencode arch=compute_10,code=\"compute_10,sm_10\" -gencode arch=compute_11,code=\"compute_11,sm_11\" -gencode arch=compute_12,code=\"compute_12,sm_12\" -gencode arch=compute_13,code=\"compute_13,sm_13\" -gencode arch=compute_20,code=\"compute_20,sm_20\" -gencode arch=compute_20,code=\"compute_20,sm_21\" -gencode arch=compute_30,code=\"compute_30,sm_30\" -gencode arch=compute_35,code=\"compute_35,sm_35\"
NVCCFLAGS += $(NVCC_GENCODE)
# The libraries.
ifeq ($(MAKE_UNAME),LinuxAMD64)
  ifeq ($(MAKE_CFG),Debug)
    LIBS += -lhxplot
    LIBS += -lhxtime
    LIBS += -lhxsurface
    LIBS += -lhxcolor
    LIBS += -lhxfield
    LIBS += -lhxcore
    LIBS += -lamiramesh
    LIBS += -lmclib
    LIBS += -lInventorBase
    LIBS += -lInventorGL
    LIBS += -lInventor
    LIBS += -lInventorImage
    LIBS += -lScaleViz
    LIBS += -lInventorGui
    LIBS += -lInventorQt4
    LIBS += -lHardCopy
    LIBS += -lFXViz
    LIBS += -lMeshViz
    LIBS += -lMeshVizExtractor
    LIBS += -lMeshVizImpl
    LIBS += -lMeshVizDataMapping
    LIBS += -lSolidViz
    LIBS += -lVolumeViz
    LIBS += -lLDM
    LIBS += -lX11
    LIBS += -ltcl8.5
    LIBS += -lexlibtiff
    LIBS += -lQt3Support
    LIBS += -lQtCore
    LIBS += -lQtDesignerComponents
    LIBS += -lQtDesigner
    LIBS += -lQtGui
    LIBS += -lQtNetwork
    LIBS += -lQtOpenGL
    LIBS += -lQtScript
    LIBS += -lQtSql
    LIBS += -lQtSvg
    LIBS += -lQtTest
    LIBS += -lQtXml
    LIBS += -lQtDeclarative
    LIBS += -lQtXmlPatterns
    LIBS += -lQtWebKit
  endif
  ifeq ($(MAKE_CFG),Optimize)
    LIBS += -lhxplot
    LIBS += -lhxtime
    LIBS += -lhxsurface
    LIBS += -lhxcolor
    LIBS += -lhxfield
    LIBS += -lhxcore
    LIBS += -lamiramesh
    LIBS += -lmclib
    LIBS += -lInventorBase
    LIBS += -lInventorGL
    LIBS += -lInventor
    LIBS += -lInventorImage
    LIBS += -lScaleViz
    LIBS += -lInventorGui
    LIBS += -lInventorQt4
    LIBS += -lHardCopy
    LIBS += -lFXViz
    LIBS += -lMeshViz
    LIBS += -lMeshVizExtractor
    LIBS += -lMeshVizImpl
    LIBS += -lMeshVizDataMapping
    LIBS += -lSolidViz
    LIBS += -lVolumeViz
    LIBS += -lLDM
    LIBS += -lX11
    LIBS += -ltcl8.5
    LIBS += -lexlibtiff
    LIBS += -lQt3Support
    LIBS += -lQtCore
    LIBS += -lQtDesignerComponents
    LIBS += -lQtDesigner
    LIBS += -lQtGui
    LIBS += -lQtNetwork
    LIBS += -lQtOpenGL
    LIBS += -lQtScript
    LIBS += -lQtSql
    LIBS += -lQtSvg
    LIBS += -lQtTest
    LIBS += -lQtXml
    LIBS += -lQtDeclarative
    LIBS += -lQtXmlPatterns
    LIBS += -lQtWebKit
  endif
endif



# The defines for each configuration.
ifeq ($(MAKE_UNAME),LinuxAMD64)
  ifeq ($(MAKE_CFG),Debug)
    DEFINES += -DBOOST_FILESYSTEM_VERSION=2
    DEFINES += -DHX_CORE_GIT
    DEFINES += -DQT_THREAD_SUPPORT
    DEFINES += -DQT_CLEAN_NAMESPACE
    DEFINES += -DTGS_OIV
    DEFINES += -DAMIRA_RELEASE
    DEFINES += -DFORTRAN_UNDERLINE
    DEFINES += -D_REENTRANT
    DEFINES += -DAMIRA64
    DEFINES += -DHX_OS_LINUX
    DEFINES += -DHX_ARCH_LINUXAMD64
    DEFINES += -DHX_LITTLE_ENDIAN
    DEFINES += -DNEWSTYLE_IOSTREAM
    DEFINES += -DHX_HAS_STDIOSTREAM
    DEFINES += -DHX_NO_MATHF
    DEFINES += -DHX_HAS_STD
    DEFINES += -DHX_HAS_STDCOMPLEX
    DEFINES += -DHX_HAS_X11
    DEFINES += -DUNICODE_CHECK
    DEFINES += -DOIV_MULTI_THREADS
    DEFINES += -DUSE_NON_CONST
  endif
  ifeq ($(MAKE_CFG),Optimize)
    DEFINES += -DBOOST_FILESYSTEM_VERSION=2
    DEFINES += -DHX_CORE_GIT
    DEFINES += -DQT_THREAD_SUPPORT
    DEFINES += -DQT_CLEAN_NAMESPACE
    DEFINES += -DTGS_OIV
    DEFINES += -DAMIRA_RELEASE
    DEFINES += -DFORTRAN_UNDERLINE
    DEFINES += -D_REENTRANT
    DEFINES += -DAMIRA64
    DEFINES += -DHX_OS_LINUX
    DEFINES += -DHX_ARCH_LINUXAMD64
    DEFINES += -DHX_LITTLE_ENDIAN
    DEFINES += -DNEWSTYLE_IOSTREAM
    DEFINES += -DHX_HAS_STDIOSTREAM
    DEFINES += -DHX_NO_MATHF
    DEFINES += -DHX_HAS_STD
    DEFINES += -DHX_HAS_STDCOMPLEX
    DEFINES += -DHX_HAS_X11
    DEFINES += -DUNICODE_CHECK
    DEFINES += -DOIV_MULTI_THREADS
    DEFINES += -DUSE_NON_CONST
  endif
endif

CXXFLAGS += $(DEFINES)
CFLAGS   += $(DEFINES)

# The package tag.
CXXFLAGS += -DPACKAGEID=amirapackage_CCPiReconstruction
# Copy files in SHARE*.
$(PRODUCTROOT)/share/resources/CCPiReconstruction.rc: share/resources/CCPiReconstruction.rc
	@echo "    Copying $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(COPY_CMD) $< $@
	$(QUIET)chmod u+w $@

COPY += $(PRODUCTROOT)/share/resources/CCPiReconstruction.rc



#
# Architectur specific copying and prepacked expansion might follow.
#
# Qt's uic targets.

# Make the OBJS dependent on the results of UIC to ensure that
# the headers resulting from UIC are available during compilation.
# The headers are stored in UICOUTPUT, which is used in the cpp rules below.
UICOUTPUT = $(addprefix $(INTERMEDIATEDIR)/, )



# Qt's moc targets.


# Qt's qrc targets.


# Cython targets.


# CUDA targets.


# CUSTOM targets.
ifeq ($(MAKE_UNAME),LinuxAMD64)
endif


# The C and CPP targets.
$(INTERMEDIATEDIR)/Parallel_Beam_recon.o: Parallel_Beam_recon.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Compiling $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(CXX) $(CXXFLAGS) -c $< -o $@

OBJS += $(INTERMEDIATEDIR)/Parallel_Beam_recon.o

ifdef MAKEDEP
$(INTERMEDIATEDIR)/Parallel_Beam_recon.d: Parallel_Beam_recon.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Generating dependencies for $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(MAKEDEP)
	@cp $@ $@.orig
	@sed -e 's/\.o:/.d:/' <$@.orig >>$@
	@sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d'  -e 's/^ *//' -e 's/$$/ :/' <$@.orig >>$@
	@rm $@.orig

DEPS += $(INTERMEDIATEDIR)/Parallel_Beam_recon.d
endif

$(INTERMEDIATEDIR)/Cone_Beam_recon.o: Cone_Beam_recon.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Compiling $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(CXX) $(CXXFLAGS) -c $< -o $@

OBJS += $(INTERMEDIATEDIR)/Cone_Beam_recon.o

ifdef MAKEDEP
$(INTERMEDIATEDIR)/Cone_Beam_recon.d: Cone_Beam_recon.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Generating dependencies for $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(MAKEDEP)
	@cp $@ $@.orig
	@sed -e 's/\.o:/.d:/' <$@.orig >>$@
	@sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d'  -e 's/^ *//' -e 's/$$/ :/' <$@.orig >>$@
	@rm $@.orig

DEPS += $(INTERMEDIATEDIR)/Cone_Beam_recon.d
endif

$(INTERMEDIATEDIR)/NeXus_normalise.o: NeXus_normalise.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Compiling $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(CXX) $(CXXFLAGS) -c $< -o $@

OBJS += $(INTERMEDIATEDIR)/NeXus_normalise.o

ifdef MAKEDEP
$(INTERMEDIATEDIR)/NeXus_normalise.d: NeXus_normalise.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Generating dependencies for $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(MAKEDEP)
	@cp $@ $@.orig
	@sed -e 's/\.o:/.d:/' <$@.orig >>$@
	@sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d'  -e 's/^ *//' -e 's/$$/ :/' <$@.orig >>$@
	@rm $@.orig

DEPS += $(INTERMEDIATEDIR)/NeXus_normalise.d
endif

$(INTERMEDIATEDIR)/XTek_recon.o: XTek_recon.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Compiling $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(CXX) $(CXXFLAGS) -c $< -o $@

OBJS += $(INTERMEDIATEDIR)/XTek_recon.o

ifdef MAKEDEP
$(INTERMEDIATEDIR)/XTek_recon.d: XTek_recon.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Generating dependencies for $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(MAKEDEP)
	@cp $@ $@.orig
	@sed -e 's/\.o:/.d:/' <$@.orig >>$@
	@sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d'  -e 's/^ *//' -e 's/$$/ :/' <$@.orig >>$@
	@rm $@.orig

DEPS += $(INTERMEDIATEDIR)/XTek_recon.d
endif

$(INTERMEDIATEDIR)/ui_messages.o: ui_messages.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Compiling $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(CXX) $(CXXFLAGS) -c $< -o $@

OBJS += $(INTERMEDIATEDIR)/ui_messages.o

ifdef MAKEDEP
$(INTERMEDIATEDIR)/ui_messages.d: ui_messages.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Generating dependencies for $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(MAKEDEP)
	@cp $@ $@.orig
	@sed -e 's/\.o:/.d:/' <$@.orig >>$@
	@sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d'  -e 's/^ *//' -e 's/$$/ :/' <$@.orig >>$@
	@rm $@.orig

DEPS += $(INTERMEDIATEDIR)/ui_messages.d
endif

$(INTERMEDIATEDIR)/../../../src/results.o: ../../../src/results.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Compiling $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(CXX) $(CXXFLAGS) -c $< -o $@

OBJS += $(INTERMEDIATEDIR)/../../../src/results.o

ifdef MAKEDEP
$(INTERMEDIATEDIR)/../../../src/results.d: ../../../src/results.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Generating dependencies for $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(MAKEDEP)
	@cp $@ $@.orig
	@sed -e 's/\.o:/.d:/' <$@.orig >>$@
	@sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d'  -e 's/^ *//' -e 's/$$/ :/' <$@.orig >>$@
	@rm $@.orig

DEPS += $(INTERMEDIATEDIR)/../../../src/results.d
endif

$(INTERMEDIATEDIR)/../../../src/instruments.o: ../../../src/instruments.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Compiling $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(CXX) $(CXXFLAGS) -c $< -o $@

OBJS += $(INTERMEDIATEDIR)/../../../src/instruments.o

ifdef MAKEDEP
$(INTERMEDIATEDIR)/../../../src/instruments.d: ../../../src/instruments.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Generating dependencies for $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(MAKEDEP)
	@cp $@ $@.orig
	@sed -e 's/\.o:/.d:/' <$@.orig >>$@
	@sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d'  -e 's/^ *//' -e 's/$$/ :/' <$@.orig >>$@
	@rm $@.orig

DEPS += $(INTERMEDIATEDIR)/../../../src/instruments.d
endif

$(INTERMEDIATEDIR)/../../../src/parallel.o: ../../../src/parallel.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Compiling $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(CXX) $(CXXFLAGS) -c $< -o $@

OBJS += $(INTERMEDIATEDIR)/../../../src/parallel.o

ifdef MAKEDEP
$(INTERMEDIATEDIR)/../../../src/parallel.d: ../../../src/parallel.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Generating dependencies for $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(MAKEDEP)
	@cp $@ $@.orig
	@sed -e 's/\.o:/.d:/' <$@.orig >>$@
	@sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d'  -e 's/^ *//' -e 's/$$/ :/' <$@.orig >>$@
	@rm $@.orig

DEPS += $(INTERMEDIATEDIR)/../../../src/parallel.d
endif

$(INTERMEDIATEDIR)/../../../src/cone.o: ../../../src/cone.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Compiling $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(CXX) $(CXXFLAGS) -c $< -o $@

OBJS += $(INTERMEDIATEDIR)/../../../src/cone.o

ifdef MAKEDEP
$(INTERMEDIATEDIR)/../../../src/cone.d: ../../../src/cone.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Generating dependencies for $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(MAKEDEP)
	@cp $@ $@.orig
	@sed -e 's/\.o:/.d:/' <$@.orig >>$@
	@sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d'  -e 's/^ *//' -e 's/$$/ :/' <$@.orig >>$@
	@rm $@.orig

DEPS += $(INTERMEDIATEDIR)/../../../src/cone.d
endif

$(INTERMEDIATEDIR)/../../../src/diamond.o: ../../../src/diamond.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Compiling $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(CXX) $(CXXFLAGS) -c $< -o $@

OBJS += $(INTERMEDIATEDIR)/../../../src/diamond.o

ifdef MAKEDEP
$(INTERMEDIATEDIR)/../../../src/diamond.d: ../../../src/diamond.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Generating dependencies for $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(MAKEDEP)
	@cp $@ $@.orig
	@sed -e 's/\.o:/.d:/' <$@.orig >>$@
	@sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d'  -e 's/^ *//' -e 's/$$/ :/' <$@.orig >>$@
	@rm $@.orig

DEPS += $(INTERMEDIATEDIR)/../../../src/diamond.d
endif

$(INTERMEDIATEDIR)/../../../src/xtek.o: ../../../src/xtek.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Compiling $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(CXX) $(CXXFLAGS) -c $< -o $@

OBJS += $(INTERMEDIATEDIR)/../../../src/xtek.o

ifdef MAKEDEP
$(INTERMEDIATEDIR)/../../../src/xtek.d: ../../../src/xtek.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Generating dependencies for $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(MAKEDEP)
	@cp $@ $@.orig
	@sed -e 's/\.o:/.d:/' <$@.orig >>$@
	@sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d'  -e 's/^ *//' -e 's/$$/ :/' <$@.orig >>$@
	@rm $@.orig

DEPS += $(INTERMEDIATEDIR)/../../../src/xtek.d
endif

$(INTERMEDIATEDIR)/../../../src/cgls.o: ../../../src/cgls.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Compiling $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(CXX) $(CXXFLAGS) -c $< -o $@

OBJS += $(INTERMEDIATEDIR)/../../../src/cgls.o

ifdef MAKEDEP
$(INTERMEDIATEDIR)/../../../src/cgls.d: ../../../src/cgls.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Generating dependencies for $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(MAKEDEP)
	@cp $@ $@.orig
	@sed -e 's/\.o:/.d:/' <$@.orig >>$@
	@sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d'  -e 's/^ *//' -e 's/$$/ :/' <$@.orig >>$@
	@rm $@.orig

DEPS += $(INTERMEDIATEDIR)/../../../src/cgls.d
endif

$(INTERMEDIATEDIR)/../../../src/sirt.o: ../../../src/sirt.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Compiling $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(CXX) $(CXXFLAGS) -c $< -o $@

OBJS += $(INTERMEDIATEDIR)/../../../src/sirt.o

ifdef MAKEDEP
$(INTERMEDIATEDIR)/../../../src/sirt.d: ../../../src/sirt.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Generating dependencies for $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(MAKEDEP)
	@cp $@ $@.orig
	@sed -e 's/\.o:/.d:/' <$@.orig >>$@
	@sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d'  -e 's/^ *//' -e 's/$$/ :/' <$@.orig >>$@
	@rm $@.orig

DEPS += $(INTERMEDIATEDIR)/../../../src/sirt.d
endif

$(INTERMEDIATEDIR)/../../../src/p2D.o: ../../../src/p2D.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Compiling $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(CXX) $(CXXFLAGS) -c $< -o $@

OBJS += $(INTERMEDIATEDIR)/../../../src/p2D.o

ifdef MAKEDEP
$(INTERMEDIATEDIR)/../../../src/p2D.d: ../../../src/p2D.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Generating dependencies for $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(MAKEDEP)
	@cp $@ $@.orig
	@sed -e 's/\.o:/.d:/' <$@.orig >>$@
	@sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d'  -e 's/^ *//' -e 's/$$/ :/' <$@.orig >>$@
	@rm $@.orig

DEPS += $(INTERMEDIATEDIR)/../../../src/p2D.d
endif

$(INTERMEDIATEDIR)/../../../src/tv_reg.o: ../../../src/tv_reg.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Compiling $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(CXX) $(CXXFLAGS) -c $< -o $@

OBJS += $(INTERMEDIATEDIR)/../../../src/tv_reg.o

ifdef MAKEDEP
$(INTERMEDIATEDIR)/../../../src/tv_reg.d: ../../../src/tv_reg.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Generating dependencies for $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(MAKEDEP)
	@cp $@ $@.orig
	@sed -e 's/\.o:/.d:/' <$@.orig >>$@
	@sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d'  -e 's/^ *//' -e 's/$$/ :/' <$@.orig >>$@
	@rm $@.orig

DEPS += $(INTERMEDIATEDIR)/../../../src/tv_reg.d
endif

$(INTERMEDIATEDIR)/../../../src/tv_core.o: ../../../src/tv_core.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Compiling $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(CXX) $(CXXFLAGS) -c $< -o $@

OBJS += $(INTERMEDIATEDIR)/../../../src/tv_core.o

ifdef MAKEDEP
$(INTERMEDIATEDIR)/../../../src/tv_core.d: ../../../src/tv_core.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Generating dependencies for $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(MAKEDEP)
	@cp $@ $@.orig
	@sed -e 's/\.o:/.d:/' <$@.orig >>$@
	@sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d'  -e 's/^ *//' -e 's/$$/ :/' <$@.orig >>$@
	@rm $@.orig

DEPS += $(INTERMEDIATEDIR)/../../../src/tv_core.d
endif

$(INTERMEDIATEDIR)/../../../src/tiff.o: ../../../src/tiff.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Compiling $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(CXX) $(CXXFLAGS) -c $< -o $@

OBJS += $(INTERMEDIATEDIR)/../../../src/tiff.o

ifdef MAKEDEP
$(INTERMEDIATEDIR)/../../../src/tiff.d: ../../../src/tiff.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Generating dependencies for $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(MAKEDEP)
	@cp $@ $@.orig
	@sed -e 's/\.o:/.d:/' <$@.orig >>$@
	@sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d'  -e 's/^ *//' -e 's/$$/ :/' <$@.orig >>$@
	@rm $@.orig

DEPS += $(INTERMEDIATEDIR)/../../../src/tiff.d
endif

$(INTERMEDIATEDIR)/../../../src/timer.o: ../../../src/timer.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Compiling $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(CXX) $(CXXFLAGS) -c $< -o $@

OBJS += $(INTERMEDIATEDIR)/../../../src/timer.o

ifdef MAKEDEP
$(INTERMEDIATEDIR)/../../../src/timer.d: ../../../src/timer.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Generating dependencies for $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(MAKEDEP)
	@cp $@ $@.orig
	@sed -e 's/\.o:/.d:/' <$@.orig >>$@
	@sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d'  -e 's/^ *//' -e 's/$$/ :/' <$@.orig >>$@
	@rm $@.orig

DEPS += $(INTERMEDIATEDIR)/../../../src/timer.d
endif

$(INTERMEDIATEDIR)/../../../src/utils.o: ../../../src/utils.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Compiling $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(CXX) $(CXXFLAGS) -c $< -o $@

OBJS += $(INTERMEDIATEDIR)/../../../src/utils.o

ifdef MAKEDEP
$(INTERMEDIATEDIR)/../../../src/utils.d: ../../../src/utils.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Generating dependencies for $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(MAKEDEP)
	@cp $@ $@.orig
	@sed -e 's/\.o:/.d:/' <$@.orig >>$@
	@sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d'  -e 's/^ *//' -e 's/$$/ :/' <$@.orig >>$@
	@rm $@.orig

DEPS += $(INTERMEDIATEDIR)/../../../src/utils.d
endif

$(INTERMEDIATEDIR)/../../../src/mpi.o: ../../../src/mpi.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Compiling $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(CXX) $(CXXFLAGS) -c $< -o $@

OBJS += $(INTERMEDIATEDIR)/../../../src/mpi.o

ifdef MAKEDEP
$(INTERMEDIATEDIR)/../../../src/mpi.d: ../../../src/mpi.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Generating dependencies for $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(MAKEDEP)
	@cp $@ $@.orig
	@sed -e 's/\.o:/.d:/' <$@.orig >>$@
	@sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d'  -e 's/^ *//' -e 's/$$/ :/' <$@.orig >>$@
	@rm $@.orig

DEPS += $(INTERMEDIATEDIR)/../../../src/mpi.d
endif

$(INTERMEDIATEDIR)/../../../src/c2D.o: ../../../src/c2D.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Compiling $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(CXX) $(CXXFLAGS) -c $< -o $@

OBJS += $(INTERMEDIATEDIR)/../../../src/c2D.o

ifdef MAKEDEP
$(INTERMEDIATEDIR)/../../../src/c2D.d: ../../../src/c2D.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Generating dependencies for $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(MAKEDEP)
	@cp $@ $@.orig
	@sed -e 's/\.o:/.d:/' <$@.orig >>$@
	@sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d'  -e 's/^ *//' -e 's/$$/ :/' <$@.orig >>$@
	@rm $@.orig

DEPS += $(INTERMEDIATEDIR)/../../../src/c2D.d
endif

$(INTERMEDIATEDIR)/../../../src/voxels.o: ../../../src/voxels.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Compiling $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(CXX) $(CXXFLAGS) -c $< -o $@

OBJS += $(INTERMEDIATEDIR)/../../../src/voxels.o

ifdef MAKEDEP
$(INTERMEDIATEDIR)/../../../src/voxels.d: ../../../src/voxels.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Generating dependencies for $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(MAKEDEP)
	@cp $@ $@.orig
	@sed -e 's/\.o:/.d:/' <$@.orig >>$@
	@sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d'  -e 's/^ *//' -e 's/$$/ :/' <$@.orig >>$@
	@rm $@.orig

DEPS += $(INTERMEDIATEDIR)/../../../src/voxels.d
endif

$(INTERMEDIATEDIR)/version.o: version.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Compiling $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(CXX) $(CXXFLAGS) -c $< -o $@

OBJS += $(INTERMEDIATEDIR)/version.o

ifdef MAKEDEP
$(INTERMEDIATEDIR)/version.d: version.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Generating dependencies for $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(MAKEDEP)
	@cp $@ $@.orig
	@sed -e 's/\.o:/.d:/' <$@.orig >>$@
	@sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d'  -e 's/^ *//' -e 's/$$/ :/' <$@.orig >>$@
	@rm $@.orig

DEPS += $(INTERMEDIATEDIR)/version.d
endif

$(INTERMEDIATEDIR)/init.o: init.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Compiling $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(CXX) $(CXXFLAGS) -c $< -o $@

OBJS += $(INTERMEDIATEDIR)/init.o

ifdef MAKEDEP
$(INTERMEDIATEDIR)/init.d: init.cpp $(UICOUTPUT) $(filter %.h %.hpp, $(COPY))  $(INTERMEDIATEDIR)/CXX  $(INTERMEDIATEDIR)/CC  $(INTERMEDIATEDIR)/CFLAGS  $(INTERMEDIATEDIR)/CXXFLAGS
	@echo "    [$(MAKE_CFG)] Generating dependencies for $(DIRNAME)/$<"
	@mkdir -p $(@D)
	$(QUIET)$(MAKEDEP)
	@cp $@ $@.orig
	@sed -e 's/\.o:/.d:/' <$@.orig >>$@
	@sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d'  -e 's/^ *//' -e 's/$$/ :/' <$@.orig >>$@
	@rm $@.orig

DEPS += $(INTERMEDIATEDIR)/init.d
endif




#
# Architecture specific source files.
#
ifeq ($(MAKE_UNAME),LinuxAMD64)
  ifeq ($(MAKE_CFG),Debug)
  endif
  ifeq ($(MAKE_CFG),Optimize)
  endif
endif


# The bison targets:
#  - BISONSRC must match xxx.y and xxx.l for flex.
#

#
# Flex only targets (w/o bison).
#

#
# The main targets.
#
lib: $(LIBDIR)/lib$(TARGET).$(SHARED_EXT)

$(LIBDIR)/lib$(TARGET).$(SHARED_EXT): $(OBJS)  $(INTERMEDIATEDIR)/LINK_SHARED  $(INTERMEDIATEDIR)/OBJS  $(INTERMEDIATEDIR)/LIBS
	@echo "    [$(MAKE_CFG)] Linking shared library $@"
	@mkdir -p $(@D)
	@-$(RM) $@
	$(QUIET)$(LINK_SHARED) $(OBJS) -o $@ -L$(LIBDIR) -L$(PRODUCTROOT)/lib $(LIBS)
	@if [ -x "$(TAGLIB)" ] ; then "$(TAGLIB)" -update $(TAGLIB_VERSION_ARGS) $@ ;  else echo "WARNING: missing taglib, cannot patch target" ; fi
	@touch $(LIBDIR)



# Quoting for COPY.
# Spaces in filenames will be added to COPY using SPACE_SUBST (currently
# ':') instead of space.
# substForShRmArg maps dangerous characters to ? for calling rm -f.
# substForPrerequisite maps SPACE_SUBST to escaped spaces that make will understand.
NULL :=
SPACE_SUBST := :
SPACE := $(NULL) $(NULL)
LEFTPAREN := (
RIGHTPAREN := )
substForShRmArg = $(subst $(LEFTPAREN),?,$(subst $(RIGHTPAREN),?,$(subst $(SPACE_SUBST),?,$1)))
substForPrerequisite = $(subst $(SPACE_SUBST),\$(SPACE),$1)

copy: $(call substForPrerequisite, $(COPY))

# 'make clean' removes intermediate directory and files copied.
clean:
	@echo "    [$(MAKE_CFG)] Removing intermediate directory"
	$(QUIET)rm -rf $(INTERMEDIATEDIR)
	$(QUIET)rm -f $(BUILDROOT)/obj/$(ARCH)/CCPiReconstruction.lastbuild
	@echo "    [$(MAKE_CFG)] Removing results"
	$(QUIET)rm -rf $(BINDIR)/$(TARGET)
	$(QUIET)rm -f $(LIBDIR)/lib$(TARGET).$(SHARED_EXT)
	$(QUIET)rm -f $(LIBDIR)/_$(TARGET).$(PYTHON_EXT)
	@if [ $(words $(COPY)) -gt 100000 ] ; then echo "Warning: COPY lists $(words $(COPY)) files, but 'make clean' will delete only 100000 files."; fi
	@rm -f $(call substForShRmArg, $(wordlist 1, 500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 501, 1000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 1001, 1500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 1501, 2000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 2001, 2500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 2501, 3000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 3001, 3500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 3501, 4000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 4001, 4500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 4501, 5000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 5001, 5500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 5501, 6000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 6001, 6500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 6501, 7000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 7001, 7500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 7501, 8000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 8001, 8500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 8501, 9000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 9001, 9500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 9501, 10000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 10001, 10500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 10501, 11000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 11001, 11500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 11501, 12000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 12001, 12500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 12501, 13000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 13001, 13500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 13501, 14000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 14001, 14500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 14501, 15000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 15001, 15500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 15501, 16000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 16001, 16500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 16501, 17000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 17001, 17500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 17501, 18000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 18001, 18500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 18501, 19000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 19001, 19500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 19501, 20000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 20001, 20500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 20501, 21000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 21001, 21500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 21501, 22000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 22001, 22500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 22501, 23000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 23001, 23500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 23501, 24000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 24001, 24500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 24501, 25000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 25001, 25500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 25501, 26000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 26001, 26500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 26501, 27000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 27001, 27500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 27501, 28000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 28001, 28500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 28501, 29000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 29001, 29500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 29501, 30000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 30001, 30500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 30501, 31000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 31001, 31500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 31501, 32000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 32001, 32500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 32501, 33000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 33001, 33500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 33501, 34000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 34001, 34500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 34501, 35000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 35001, 35500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 35501, 36000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 36001, 36500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 36501, 37000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 37001, 37500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 37501, 38000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 38001, 38500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 38501, 39000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 39001, 39500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 39501, 40000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 40001, 40500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 40501, 41000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 41001, 41500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 41501, 42000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 42001, 42500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 42501, 43000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 43001, 43500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 43501, 44000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 44001, 44500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 44501, 45000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 45001, 45500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 45501, 46000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 46001, 46500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 46501, 47000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 47001, 47500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 47501, 48000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 48001, 48500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 48501, 49000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 49001, 49500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 49501, 50000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 50001, 50500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 50501, 51000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 51001, 51500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 51501, 52000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 52001, 52500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 52501, 53000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 53001, 53500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 53501, 54000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 54001, 54500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 54501, 55000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 55001, 55500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 55501, 56000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 56001, 56500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 56501, 57000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 57001, 57500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 57501, 58000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 58001, 58500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 58501, 59000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 59001, 59500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 59501, 60000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 60001, 60500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 60501, 61000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 61001, 61500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 61501, 62000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 62001, 62500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 62501, 63000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 63001, 63500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 63501, 64000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 64001, 64500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 64501, 65000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 65001, 65500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 65501, 66000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 66001, 66500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 66501, 67000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 67001, 67500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 67501, 68000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 68001, 68500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 68501, 69000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 69001, 69500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 69501, 70000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 70001, 70500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 70501, 71000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 71001, 71500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 71501, 72000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 72001, 72500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 72501, 73000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 73001, 73500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 73501, 74000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 74001, 74500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 74501, 75000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 75001, 75500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 75501, 76000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 76001, 76500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 76501, 77000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 77001, 77500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 77501, 78000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 78001, 78500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 78501, 79000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 79001, 79500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 79501, 80000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 80001, 80500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 80501, 81000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 81001, 81500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 81501, 82000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 82001, 82500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 82501, 83000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 83001, 83500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 83501, 84000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 84001, 84500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 84501, 85000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 85001, 85500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 85501, 86000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 86001, 86500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 86501, 87000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 87001, 87500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 87501, 88000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 88001, 88500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 88501, 89000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 89001, 89500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 89501, 90000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 90001, 90500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 90501, 91000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 91001, 91500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 91501, 92000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 92001, 92500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 92501, 93000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 93001, 93500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 93501, 94000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 94001, 94500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 94501, 95000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 95001, 95500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 95501, 96000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 96001, 96500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 96501, 97000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 97001, 97500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 97501, 98000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 98001, 98500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 98501, 99000, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 99001, 99500, $(COPY)))
	@rm -f $(call substForShRmArg, $(wordlist 99501, 100000, $(COPY)))


# 'make dep' generates dependencies from scratch
dep: $(DEPS)

# 'make depclean' removes all automatic dependencies
depclean:
	@echo "    [$(MAKE_CFG)] Removing all automatic dependencies"
	@rm -f $(INTERMEDIATEDIR)/*.d


# Check whether CC has changed.
$(INTERMEDIATEDIR)/CC: FORCE
	@VAR='$(CC)';  if test ! -e $@ -o x"$$VAR" != x"`cat $@ 2>/dev/null`" ; then  echo 1>&2 "    CC has changed.";  mkdir -p $(INTERMEDIATEDIR);  echo "$$VAR" >$@;  fi

# Check whether CFLAGS has changed.
$(INTERMEDIATEDIR)/CFLAGS: FORCE
	@VAR='$(CFLAGS)';  if test ! -e $@ -o x"$$VAR" != x"`cat $@ 2>/dev/null`" ; then  echo 1>&2 "    CFLAGS has changed.";  mkdir -p $(INTERMEDIATEDIR);  echo "$$VAR" >$@;  fi

# Check whether CXX has changed.
$(INTERMEDIATEDIR)/CXX: FORCE
	@VAR='$(CXX)';  if test ! -e $@ -o x"$$VAR" != x"`cat $@ 2>/dev/null`" ; then  echo 1>&2 "    CXX has changed.";  mkdir -p $(INTERMEDIATEDIR);  echo "$$VAR" >$@;  fi

# Check whether CXXFLAGS has changed.
$(INTERMEDIATEDIR)/CXXFLAGS: FORCE
	@VAR='$(CXXFLAGS)';  if test ! -e $@ -o x"$$VAR" != x"`cat $@ 2>/dev/null`" ; then  echo 1>&2 "    CXXFLAGS has changed.";  mkdir -p $(INTERMEDIATEDIR);  echo "$$VAR" >$@;  fi

# Check whether LINK_BIN has changed.
$(INTERMEDIATEDIR)/LINK_BIN: FORCE
	@VAR='$(LINK_BIN)';  if test ! -e $@ -o x"$$VAR" != x"`cat $@ 2>/dev/null`" ; then  echo 1>&2 "    LINK_BIN has changed.";  mkdir -p $(INTERMEDIATEDIR);  echo "$$VAR" >$@;  fi

# Check whether LINK_SHARED has changed.
$(INTERMEDIATEDIR)/LINK_SHARED: FORCE
	@VAR='$(LINK_SHARED)';  if test ! -e $@ -o x"$$VAR" != x"`cat $@ 2>/dev/null`" ; then  echo 1>&2 "    LINK_SHARED has changed.";  mkdir -p $(INTERMEDIATEDIR);  echo "$$VAR" >$@;  fi

# Check whether OBJS has changed.
$(INTERMEDIATEDIR)/OBJS: FORCE
	@VAR='$(OBJS)';  if test ! -e $@ -o x"$$VAR" != x"`cat $@ 2>/dev/null`" ; then  echo 1>&2 "    OBJS has changed.";  mkdir -p $(INTERMEDIATEDIR);  echo "$$VAR" >$@;  fi

# Check whether LIBS has changed.
$(INTERMEDIATEDIR)/LIBS: FORCE
	@VAR='$(LIBS)';  if test ! -e $@ -o x"$$VAR" != x"`cat $@ 2>/dev/null`" ; then  echo 1>&2 "    LIBS has changed.";  mkdir -p $(INTERMEDIATEDIR);  echo "$$VAR" >$@;  fi

#
# Check if current architecture is supported.
#
ifneq ($(filter LinuxAMD64, $(MAKE_UNAME)), $(MAKE_UNAME))
	$(error this makefile is not generated to be used on $(MAKE_UNAME), use --archs during createBuildSystem run)
endif

.PHONY: full
full:
	$(MAKE) -C $(BUILDROOT) $(TARGET)
